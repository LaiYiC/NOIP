#include<bits/stdc++.h>
#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <math.h>
#include <stack>
#include <map>
using namespace std;
typedef long long ll;
const int MAXN = 2e6 + 50;
const int INF = 0x7fffffff;

//******** Never give up ********
typedef unsigned long long ULL;
ULL p[MAXN],sum[MAXN];
char s[MAXN];
int n;
const ULL MOD = 131;
ULL zz = 0;

void init() {
	p[0] = 1;
	for(int i=1; i<MAXN; i++) {
		p[i] = p[i-1] * MOD;
	}
}

bool check(int i,int j) { //判断是否唯一hash串
	if(zz) {
		if(sum[j] - sum[i-1]*p[j-i+1] == zz)return 0;
		return 1;
	} else {
		zz = sum[j] - sum[i-1]*p[j-i+1];
		return 1;
	}
}


int main() {
//	freopen("in.txt","r",stdin);
//	freopen("out.txt","w",stdout);
	scanf("%d",&n);
	init();
	scanf("%s",s+1);
	sum[0] = 0;   //wrong 初始化1 
	for(int i=1; i<=n; i++) { //计算前缀hash
		sum[i] = sum[i-1] * MOD + (ULL)(s[i] - 'A' + 1);
	}
	int mid = n / 2;
	int flag = 0,ansi=0;   //... ... . mid = 3

	//特判三个点  A B A B A B A B A 
//			      1 2 3 4 5 6 7 8 9  mid = 4
	if((sum[mid+1] - sum[1]*p[mid]) == (sum[n] - sum[mid+1]*p[mid])) {  //????
		//第一个点 [2...mid+1] == [mid+2...n]
		if(check(mid+2,n)) {
			flag++;
			ansi = 2;
		}
	}
//	cout << flag << endl; 
	if((sum[mid] - sum[0]*p[mid]) == (sum[n-1] - sum[mid]*p[mid])) {
		//第n个点 [1...mid] == [mid+1...n-1]
		if(check(1,mid)) {
			flag++;
			ansi = 1;
		}
	}
	
//	cout << flag << endl;
	if((sum[mid] - sum[0]*p[mid]) == (sum[n] - sum[mid+1]*p[mid])) {
		//第mid+1个点 [1...mid] == [mid+2...n]
		if(check(1,mid)) {
			flag++;
			ansi = 1;
		}
	}
	//A B i C A B C
	//1 2 3 4 5 6 7   [1....i-1] i [i+1 ... mid+1] ==  [mid+2...n] 
	for(int i=2; i<n; i++) { //枚举每一个断点
		if(i <= mid+1) { //左半边
			ULL l = sum[i-1]*p[mid-i+1] + sum[mid+1] - sum[i]*p[mid+1-i];
			ULL r = sum[n] - sum[mid+1]*p[mid];
			
			if(l == r && check(mid+2,n)) {
				flag++;
				ansi = mid+2;
			}
		} else {
			ULL l = sum[mid]; // [..... ] [mid+1....k  ....n]
			ULL r = (sum[n] - sum[i]*p[n-i]) + (sum[i-1] - sum[mid]*p[i-mid-1])*p[n-i];
			if(l == r && check(1,mid)) {
				flag++;
				ansi = 1;
			}
		}
	}
	if(flag == 0){
		printf("NOT POSSIBLE\n");
	}
	else if(flag > 1){
		printf("NOT UNIQUE\n");
	}
	else {
		for(int i=ansi;i<ansi+mid;i++){
			printf("%c",s[i]);
		}
		printf("\n");
	}
	return 0;
}
